# vi: ft=tmux tw=0 ts=2 sw=2 sts=2 fdm=marker fmr={{{,}}} et:

### Heads will roll {{{1
major="tmux -V | cut -d\  -f2 | cut -d. -f1 | sed 's/[^0-9]*//g'"
minor="tmux -V | cut -d\  -f2 | cut -d. -f2 | sed 's/[^0-9]*//g'"

### Server Options {{{1

# Fix escape key delay
set-option -gs escape-time 5

### Session and Window Options {{{1
set-option -g mode-keys vi

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# Window Numbering
set-option -g base-index 1
set-option -g pane-base-index 1
set-option -g renumber-windows on

# Keep detached sessions alive
set-option -g destroy-unattached off
set-option -g exit-unattached off
set-option -g detach-on-destroy on

# dynamic window title
set-option -g set-titles on
run-shell 'tmux set-option -g set-titles-string "$USER@${HOSTNAME:-$(hostname)} ##W" >/dev/null'
set-window-option -g automatic-rename on
set-window-option -g allow-rename off # Don't let escape sequences rename window

# Set window notifications
set-option -g visual-activity off

set-option -g history-limit 8192

# listen for activity on all windows
set-option -g bell-action any
set-option -g visual-bell off
if-shell "[ $major -le 2 -a $minor -lt 6 ]" \
  "set-option -g bell-on-alert on\;"

set-window-option -g xterm-keys off
set-option -g default-terminal "screen-256color"
if-shell "printenv ITERM_SESSION_ID >/dev/null 2>/dev/null" \
  "set-window-option -g aggressive-resize on\;"

set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80

set-window-option -g display-panes-time 1500

# environment
set-option -g update-environment "DISPLAY"
set-option -ag update-environment "SSH_ASKPASS"
set-option -ag update-environment "SSH_AUTH_SOCK"
set-option -ag update-environment "SSH_AGENT_PID"
set-option -ag update-environment "SSH_CONNECTION"
set-option -ag update-environment "WINDOWID"
set-option -ag update-environment "XAUTHORITY"
set-option -ag update-environment "DBUS_SESSION_BUS_ADDRESS"
set-option -ag update-environment "GPG_AGENT_INFO"
set-option -ag update-environment "GPG_TTY"

# Status  {{{2
set-option -g  status-style                 "fg=colour252,bg=colour234"
set-option -gw status-left-style            "fg=colour238,bg=colour234"
set-option -gw status-right-style           "fg=colour238,bg=colour234"

set-option -g  window-status-activity-style "fg=colour0,bg=colour203"
set-option -g  window-status-bell-style     "fg=colour253,bg=colour132"
set-option -g  window-status-current-style  "fg=colour252,bg=colour0,bold"

set-option -gw window-status-format         "#I#{?window_flags,#{window_flags}, }#W"
set-option -g  window-status-current-format "#I#F#W"

set-option -g  pane-active-border-style     "fg=colour252,bg=colour0"
set-option -g  pane-border-style            "fg=colour236,bg=colour0"

set-option -g  message-style                "fg=colour196,bg=colour235"

set-option -g  display-panes-active-colour  colour252
set-option -g  display-panes-colour         colour2

set-option -g status-interval 15
set-option -g status-justify left
set-option -g status-left-length 40

set-option -g status-right '#{session_name}'
set-option -g status-right-length 20
run-shell 'tmux set-option -g status-left "$USER@${HOSTNAME:-$(hostname)}  " >/dev/null'

set-window-option -g clock-mode-colour colour40 #greeen

### Keybindings {{{1

unbind-key C-b
unbind-key '#'
unbind-key '$'
unbind-key %
unbind-key -n %
unbind-key C-h
unbind-key -n C-h
unbind-key C-l
unbind-key -n C-l
unbind-key ]

set-option -g prefix C-a
bind-key    C-a send-prefix
bind-key    a   send-prefix
bind-key -n C-1 send-prefix

bind-key R display-message "reloading config" \; source-file ~/.tmux.conf
bind-key r refresh-client
bind-key '~' split-window -v -p 50 "htop -C || top"

bind-key e      set-option synchronize-panes
bind-key n      next-window
bind-key m      previous-window
bind-key C-o    rotate-window
bind-key BSpace clearhist

bind-key   v  split-window -h -c "#{pane_current_path}"
bind-key   s  split-window -v -c "#{pane_current_path}"
bind-key   c  new-window   -c "#{pane_current_path}"
bind-key   C  new-window
bind-key   l  select-pane  -L
bind-key   j  select-pane  -D
bind-key   k  select-pane  -U
bind-key   h  select-pane  -R

bind-key   C-l send-keys 'C-l' # allows prefix C-l for redraw
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -nr C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -nr C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -nr C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -nr C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -nr 'C-\' if-shell "$is_vim" "send-keys C-w\\" "select-window -l" 
bind-key '\' last-window \

bind-key [ copy-mode

bind-key o save-buffer /tmp/tmuxbuffer.out \; display-message 'saved to /tmp/tmuxbuffer.out'
bind-key p paste-buffer

if-shell "[ $major -le 2 -a $minor -lt 4 ]" \
  " bind-key -t vi-copy v     begin-selection \;  \
    bind-key -t vi-copy V     rectangle-toggle \; \
    bind-key -t vi-copy y     copy-pipe          \"xsel -ib || reattach-to-user-namespace pbcopy\" \; \
    bind-key -t vi-copy Enter copy-pipe          \"xsel -ib || reattach pbcopy\" \; \
  " \
  " bind-key -T copy-mode-vi 'v'   send-keys -X begin-selection\;    \
    bind-key -T copy-mode-vi 'V'   send-keys -X rectangle-toggle\;   \
    bind-key -T copy-mode-vi 'y'   send-keys -X copy-pipe-and-cancel \"xsel -ib || reattach-to-user-namespace pbcopy\"\; \
    bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel \"xsel -ib || reattach-to-user-namespace pbcopy\"\; \
  "

## XXX: workaround for tmux < 2.4 if the if-shell above fails
# bind-key -t vi-copy v     begin-selection
# bind-key -t vi-copy V     rectangle-toggle
# bind-key -t vi-copy y     copy-pipe          "xsel -ib || reattach-to-user-namespace pbcopy"
# bind-key -t vi-copy Enter copy-pipe          "xsel -ib || reattach pbcopy"
